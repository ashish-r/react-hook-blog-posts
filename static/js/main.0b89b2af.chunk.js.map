{"version":3,"sources":["constants/configs.ts","utils/common.ts","constants/urls.ts","store/actions.ts","utils/router.ts","components/common/BlogPost.tsx","components/home/Home.tsx","utils/apis.ts","components/post/SinglePost.tsx","components/common/Header.tsx","components/common/Categories.tsx","components/common/TopTags.tsx","components/common/Footer.tsx","App.tsx","components/common/ErrorBoundary.tsx","store/reducers.ts","store/index.ts","index.tsx"],"names":["BASE_URL","get","url","a","axios","then","response","data","catch","error","console","log","objectToQueryString","query","Object","keys","map","k","encodeURIComponent","join","stringifyObjectValues","obj","reduce","acc","key","stopEventBubbleAndCall","func","event","stopPropagation","TAGS","POSTS_FEED_URL","ACTION_TYPES","history","createHistory","navigateTo","path","push","BlogPost","post","showCompletePost","className","featured_image","src","alt","categories","category","onClick","title","endDate","startDate","Date","duration","getTime","durationInDays","Math","floor","toDateString","durationInHours","durationInMinutes","timeInAge","date","author","name","dangerouslySetInnerHTML","__html","tags","tag","Home","useState","page","setPage","useEffect","window","scrollTo","locationPath","useLocation","pathname","split","slice","routeType","routeSlug","isPathChanged","value","ref","useRef","current","useGetPrevious","blogFeedsParam","showPathInfo","blogFeeds","shouldAppend","isLoading","feed","undefined","totalCount","blogs","setBlogs","queryString","dispatch","useDispatch","urls","newFeed","posts","content","excerpt","ID","slug","found","type","payload","useGetBlogs","useSelector","state","blog","topTags","totalPosts","totalBlogs","pathInfo","useMemo","find","length","SinglePost","postId","postSlug","blogPost","setBlogPost","useGetBlogPost","React","memo","setCategories","useGetCategories","useGetTopTags","role","App","ErrorBoundary","props","hasError","errorInfo","this","children","Component","initialState","reducers","action","produce","draftState","middlewares","routerMiddleware","composeEnhancers","compose","Store","createStore","combineReducers","applyMiddleware","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0b89b2af.chunk.js","sourcesContent":["export const BASE_URL = 'https://public-api.wordpress.com/rest/v1.1/sites/'\nexport const SITE_ID = 107403796\nexport const NO_OF_FFEDS = 25\nexport const NO_OF_TOP_TAGS = 10","import axios from 'axios'\nimport { BASE_URL, SITE_ID } from '../constants/configs'\nimport { IGenericObject } from '../interfaces'\nimport { useRef, useEffect } from 'react'\n\nexport async function get(url: string) {\n\treturn axios\n\t\t.get(`${BASE_URL}${SITE_ID}/${url}`)\n\t\t.then((response) => response.data)\n\t\t.catch((error) => {\n            // Log Error\n\t\t\tconsole.log(error)\n\t\t\tconsole.log('An Error Occurred')\n\t\t})\n}\n\nexport function objectToQueryString(query: IGenericObject<string|number>): string {\n\treturn Object.keys(query)\n\t\t.map((k) => `${encodeURIComponent(k)}=${encodeURIComponent(query[k])}`)\n\t\t.join('&')\n}\n\nexport function stringifyObjectValues(obj: IGenericObject<any>): IGenericObject<string> {\n\treturn Object.keys(obj).reduce((acc, key) => ({ ...acc, [key]: obj[key] + ''}), {})\n}\n\nexport function useGetPrevious(value: any): any {\n\tconst ref = useRef()\n\tuseEffect(() => {\n\t\tref.current = value\n\t}, [value])\n\treturn ref.current\n}\n\nexport function timeInAge(endDate: Date, startDate: Date = new Date()): string{\n    const duration = startDate.getTime() - endDate.getTime()\n    /*86400000 milliseconds = 1 day */\n\tconst durationInDays = Math.floor(duration / 86400000)\n\tif (durationInDays > 20)\n    {\n        return endDate.toDateString()\n    }\n    if (durationInDays > 1)\n    {\n        return `${durationInDays} days ago`\n    }\n    if (durationInDays === 1)\n    {\n        return 'Yesterday'\n    }\n    /*3600000 milliseconds = 1 hour */\n    const durationInHours = Math.floor(duration / 3600000) \n    if (durationInHours >= 1)\n    {\n        return `${durationInHours} ${(durationInHours === 1 ? 'hour ago' : 'hours ago')}`\n    }\n    /*60000 milliseconds = 1 minute */\n    const durationInMinutes = Math.floor(duration / 60000 )\n    if (durationInMinutes >= 1)\n    {\n        return `${durationInMinutes} ${(durationInMinutes === 1 ? 'minute ago' : 'minutes ago')}`\n    }\n    return 'Just now'\n}\n\nexport function decodeSlug(slug: string): string {\n    return slug.split('-').join(' ')\n}\n\nexport function stopEventBubbleAndCall(func: Function, event: React.MouseEvent): void {\n    event.stopPropagation()\n    func()\n}\n","import { NO_OF_TOP_TAGS, NO_OF_FFEDS } from \"./configs\"\n\nexport const TAGS = `tags/?order_by=count&order=DESC&number=${NO_OF_TOP_TAGS}`\nexport const CATEGORIES = 'categories/'\nexport const POSTS_FEED_URL = `posts/?number=${NO_OF_FFEDS}&order_by=date`\nexport const SINGLE_POST_URL = `posts/`\n","export const ACTION_TYPES = {\n    SAVE_BLOG_FEEDS: 'SAVE_BLOG_FEEDS',\n    SAVE_CATEGORIES: 'SAVE_CATEGORIES',\n    SAVE_TOP_TAGS: 'SAVE_TOP_TAGS',\n}","import { createBrowserHistory as createHistory } from 'history'\n\nexport const history = createHistory()\n\nexport function navigateTo(path: string) {\n    history.push(path)\n}","import React  from 'react'\nimport { IBlogFeed } from '../../interfaces'\nimport { timeInAge, stopEventBubbleAndCall } from '../../utils/common'\nimport { navigateTo } from '../../utils/router'\n\nconst BlogPost = ({post, showCompletePost = false}: {post: IBlogFeed, showCompletePost?: boolean}) => {\n    return (\n        <article className=\"article-content\" >\n            <header>\n                {\n                    post.featured_image && \n                    (<img src={`${post.featured_image}`} alt=\"Post Thumbnail\" className=\"post-thumbnail\"/>)\n                }\n                <div className=\"article-category-wrapper\">\n                    {\n                        Object.keys(post.categories).map(\n                            (category) => (\n                                <div \n                                    className=\"article-category\"\n                                    key={category}\n                                    onClick={\n                                        (event) => stopEventBubbleAndCall(\n                                            () => navigateTo(\n                                                `/category/${post.categories[category]['slug']}`\n                                            ),\n                                            event\n                                        ) \n                                    }\n                                >\n                                    {category}\n                                </div>\n                            )\n                        )\n                    }\n                </div>\n                <h2 className=\"post-title\">\n                    { post.title }\n                </h2>\n            </header>\n            <footer className=\"post-meta-container\">\n                <div className=\"post-meta\">\n                    • &nbsp;  \n                    { timeInAge(new Date(post.date)) }\n                </div>\n                {post.author && post.author.name && \n                (\n                    <div className=\"post-meta\">\n                        • &nbsp;  \n                        { post.author.name }\n                    </div>\n                )}\n            </footer>\n            <div className=\"content-section\">\n                <div dangerouslySetInnerHTML={\n                    { __html: post[showCompletePost ? 'content' : 'excerpt'] }\n                } />\n            </div>\n            <div className=\"article-category-wrapper\">\n                    {\n                        Object.keys(post.tags).map(\n                            (tag) => (\n                                <div \n                                    className=\"article-tag\"\n                                    key={tag}\n                                    onClick={\n                                        (event) => stopEventBubbleAndCall(\n                                            () => navigateTo(\n                                                `/tag/${post.tags[tag]['slug']}`\n                                            ),\n                                            event\n                                        ) \n                                    }\n                                >\n                                    {tag}\n                                </div>\n                            )\n                        )\n                    }\n                </div>\n        </ article >\n    )\n}\n\nexport default BlogPost\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { useGetBlogs } from '../../utils/apis'\nimport BlogPost from '../common/BlogPost'\nimport { NO_OF_FFEDS } from '../../constants/configs'\nimport { useLocation } from 'react-router'\nimport { IBlogFeedsQueryParams, IGenericObject, IRootState } from '../../interfaces'\nimport { useGetPrevious, decodeSlug } from '../../utils/common'\nimport { useSelector } from 'react-redux'\nimport { navigateTo } from '../../utils/router'\n\nconst Home = () => {\n    const [page, setPage] = useState(1)\n    useEffect(() => window.scrollTo(0, 0), [])\n    const { pathname: locationPath } = useLocation()\n    const [routeType, routeSlug] = locationPath.split('/').slice(1)\n    const previousLocationPath = useGetPrevious(locationPath)\n    const isPathChanged = previousLocationPath !== locationPath\n    const blogFeedsParam: IBlogFeedsQueryParams = { page }\n    let showPathInfo = false\n    if(routeType && routeSlug) {\n        (blogFeedsParam as IGenericObject<any>)[routeType] = routeSlug\n        showPathInfo = true\n    }\n    const blogFeeds = useGetBlogs(blogFeedsParam, !isPathChanged)\n    const categories = useSelector((state: IRootState) => state.blog.categories) || []\n    const topTags = useSelector((state: IRootState) => state.blog.topTags) || []\n    const totalPosts = useSelector((state: IRootState) => state.blog.totalBlogs) || 0\n    const pathInfo = useMemo(\n        () => showPathInfo ? \n            `${routeType} Archives: ${\n                (((routeType === 'category' ? categories: topTags)\n                .find(({slug}) => slug === routeSlug) || {})['name']) ||\n                decodeSlug(routeSlug)\n            }` :\n            '',\n        [showPathInfo, routeType, routeSlug, categories, topTags]\n    )\n    return (\n        <div className=\"feeds-container\">\n            {\n                pathInfo && (\n                    <h4 className=\"path-info\">\n                        {pathInfo}\n                    </h4>\n                )\n            }\n            {\n                (blogFeeds.isLoading || isPathChanged) ? \n                (<h2>Loading...</h2>) :\n                blogFeeds.data ?\n                (<>\n                    {\n                        blogFeeds.data.map(\n                            blog => (\n                                <div \n                                    className=\"blog-feed-navigation\"\n                                    key={`${blog.slug}-${blog.ID}`}\n                                    onClick={() => navigateTo(`/post/${blog.ID}/${blog.slug}`)}\n                                >\n                                    <BlogPost post={blog}/>\n                                    <div className=\"click-continue\">Continue Reading → </div>\n                                </div>\n                            )\n                        )\n                    }\n                    {\n                        (totalPosts > page * NO_OF_FFEDS) && \n                        (\n                            <div className=\"view-more-btn-container\">\n                                {\n                                    (blogFeeds.data.length === (page - 1) * NO_OF_FFEDS) ?\n                                    (<button> Loading... </button>) : \n                                    (<button onClick={()=>setPage(page + 1)}> Older Posts </button>)\n                                }\n                            </div>\n                        )\n                    }\n                </>):\n                (<h2>Error Loading Data!!</h2>)\n            }\n        </div>\n    )\n}\n\nexport default Home","import { useState, useEffect, } from 'react'\nimport { get, objectToQueryString, stringifyObjectValues, } from \"./common\"\nimport * as urls from \"../constants/urls\"\nimport {\n    ITopTagsResponse,\n    ITopTag,\n    ICategoriesResponse,\n    ICategory,\n    IAPIState,\n    IBlogFeedsQueryParams,\n    IBlogFeedsResponse,\n    IBlogFeed,\n    IAction,\n    IRootState,\n} from \"../interfaces\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { ACTION_TYPES } from '../store/actions'\n\nexport function useGetCategories(): IAPIState<ICategory[] | undefined> {\n    const [categories, setCategories] = useState<IAPIState<ICategory[] | undefined>>(\n        {isLoading: true, data: undefined}\n    )\n\n    const dispatch: Dispatch<IAction> = useDispatch()\n\n    useEffect(() => {\n        (async() => {\n            const response: ICategoriesResponse | undefined = await get(urls.CATEGORIES)\n            setCategories(\n                {\n                    isLoading: false, \n                    data: response && response.categories && response.categories.map(\n                        ({name, slug}) => ({name, slug})\n                    ),\n                }\n            )\n        })()\n    }, [])\n    dispatch({type: ACTION_TYPES.SAVE_CATEGORIES, payload: {data: categories.data}})\n    return { ...categories }\n}\n\nexport function useGetTopTags(): IAPIState<ITopTag[] | undefined> {\n    const [topTags, setCategories] = useState<IAPIState<ITopTag[] | undefined>>(\n        {isLoading: true, data: undefined}\n    )\n    \n    const dispatch: Dispatch<IAction> = useDispatch()\n\n    useEffect(() => {\n        (async() => {\n            const response: ITopTagsResponse | undefined = await get(urls.TAGS)\n            setCategories(\n                {\n                    isLoading: false, \n                    data: response && response.tags && response.tags.map(\n                        ({name, slug}) => ({name, slug})\n                    ),\n                }\n            )\n        })()\n    }, [])\n\n    dispatch({type: ACTION_TYPES.SAVE_TOP_TAGS, payload: {data: topTags.data}})\n\n    return { ...topTags }\n}\n\nexport function useGetBlogPost(postId: number, postSlug: string): IAPIState<IBlogFeed | undefined> {\n    const [blogPost, setBlogPost] = useState<IAPIState<IBlogFeed | undefined>>(\n        {isLoading: true, data: undefined}\n    )\n    const blogs = useSelector((state: IRootState) => state.blog.blogs) || []\n    useEffect(() => {\n        const post = blogs.find(({ID, slug}) => ((ID === postId) && (slug === postSlug)))\n        if(post){\n            setBlogPost(\n                {\n                    isLoading: false, \n                    data: post,\n                }\n            )\n        }\n        else{\n            (async() => {\n                const response: IBlogFeed | undefined = await get(`${urls.SINGLE_POST_URL}${postId}`)\n                setBlogPost(\n                    {\n                        isLoading: false, \n                        data: response,\n                    }\n                )\n            })()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return { ...blogPost }\n}\n\nexport function useGetBlogs(\n    query: IBlogFeedsQueryParams,\n    shouldAppend: boolean = true\n): IAPIState<IBlogFeed[] | undefined> {\n    const [blogs, setBlogs] = useState<IAPIState<{\n        feed?: IBlogFeed[] \n        totalCount: number\n    }>>(\n        {isLoading: true, data: {feed: undefined, totalCount: 0}}\n    )\n    const queryString = objectToQueryString(stringifyObjectValues(query))\n    const dispatch: Dispatch<IAction> = useDispatch()\n\n    useEffect(() => {\n        (async() => {\n            const response: IBlogFeedsResponse | undefined = await get(`${urls.POSTS_FEED_URL}&${queryString}`)\n            const newFeed = response && response.posts && response.posts.map(\n                ({\n                    author,\n                    categories,\n                    content,\n                    date,\n                    excerpt,\n                    featured_image,\n                    ID,\n                    slug,\n                    tags,\n                    title,\n                }) => ({\n                    author,\n                    categories,\n                    content,\n                    date,\n                    excerpt,\n                    featured_image,\n                    ID,\n                    slug,\n                    tags,\n                    title,\n                })\n            )\n            setBlogs(\n                {\n                    isLoading: false, \n                    data: {\n                        feed: [\n                            ...((shouldAppend && blogs.data.feed) || []),\n                            ...(newFeed || [])\n                        ],\n                        totalCount: (response && response.found) || 0\n                    }\n                }\n            )\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [queryString])\n\n    dispatch(\n        {\n            type: ACTION_TYPES.SAVE_BLOG_FEEDS,\n            payload: {data: blogs.data.feed, totalCount: blogs.data.totalCount}\n        }\n    )\n    return { data: blogs.data.feed, isLoading: blogs.isLoading }\n}\n","import React, { useEffect } from 'react'\nimport BlogPost from '../common/BlogPost'\nimport { useLocation } from 'react-router'\nimport { useGetBlogPost } from '../../utils/apis'\n\nconst SinglePost = () => {\n    useEffect(() => window.scrollTo(0, 0), [])\n    const { pathname: locationPath } = useLocation()\n    const [postId, postSlug] = locationPath.split('/').slice(2)\n    const { data: post, isLoading } = useGetBlogPost(+postId, postSlug)\n    return (\n        <div className=\"feeds-container\">\n        {\n            isLoading ? \n            (<h2>Loading...</h2>) :\n            post ? \n            (<BlogPost post={ post } showCompletePost={true} />) : \n            (<h2>Error Loading Data!!</h2>)\n        }\n        </div>\n    )\n}\n\nexport default SinglePost","import React from 'react'\nimport { navigateTo } from '../../utils/router'\n\nconst Header = () => (\n    <div className=\"header-main\">\n        <div className=\"header-title\">\n            <h1 className=\"site-title\">\n                <span onClick={() => navigateTo('/')}>\n                    React Hooks Blog\n                </span>\n            </h1>\n        </div>\n        <header className=\"header-image-container\">\n            <img \n            src=\"https://truecaller.blog/wp-content/uploads/2017/03/cropped-blog-header.png\" \n            alt=\"Header\"\n            />\n        </header>\n    </div>\n)\n\nexport default React.memo(Header)\n","import React  from 'react'\nimport { useGetCategories } from '../../utils/apis'\nimport { navigateTo } from '../../utils/router'\n\nconst Categories = () => {\n    const {isLoading, data: categories} = useGetCategories()\n    if(isLoading) {\n        return <p>Loading....</p>\n    }\n    return !categories ? \n        (\n            <p>Loading Categories Failed </p>\n        ) :\n        (\n            <>\n                {\n                    categories.map(\n                        ({slug, name}) => (\n                            <p key={slug} onClick={() => navigateTo(`/category/${slug}`)}>\n                                {`${name}`} \n                            </p>\n                        )\n                    )\n                }\n            </>\n        )\n}\n\nexport default React.memo(Categories)\n","import React from 'react'\nimport { useGetTopTags } from '../../utils/apis'\nimport { navigateTo } from '../../utils/router'\n\nconst TopTags = () => {\n    const {isLoading, data: topTags} = useGetTopTags()\n\n    if(isLoading) {\n        return <p>Loading....</p>\n    }\n    return !topTags ? \n        (\n            <p>Loading Top Tags Failed </p>\n        ) :\n        (\n            <>\n                {\n                    topTags.map(\n                        ({slug, name}) => (\n                            <p key={slug} onClick={() => navigateTo(`/tag/${slug}`)}>\n                                {`${name}`}\n                            </p>\n                        )\n                    )\n                }\n            </>\n        )\n}\n\nexport default React.memo(TopTags)\n","import React from 'react'\n\nconst Footer = () => (\n    <footer className=\"site-footer\" role=\"contentinfo\">\n        <div>Created By: Ashish Ranjan</div>\n    </footer>\n)\n\nexport default React.memo(Footer)\n","import React from 'react'\nimport './css/index.css'\nimport Home from './components/home/Home'\nimport SinglePost from './components/post/SinglePost'\nimport { Router, Route, Switch } from 'react-router'\nimport Header from './components/common/Header'\nimport Categories from './components/common/Categories'\nimport TopTags from './components/common/TopTags'\nimport Footer from './components/common/Footer'\nimport { history } from './utils/router'\n\nconst App = () => {\n    return (\n        <div>\n            <Header/>\n            <div className=\"container\">\n                <div className=\"main-container\">\n                    <Router history={history}>\n                        <Switch>\n                            <Route path=\"/post/:postId/:postSlug\">\n                                <SinglePost />\n                            </Route>\n                            <Route path=\"/:type/:subType\">\n                                <Home />\n                            </Route>\n                            <Route path=\"/\">\n                                <Home />\n                            </Route>\n                        </Switch>\n                    </Router>\n                </div>\n                <div className=\"side-container\">\n                    <div className=\"categories-container\">\n                        <h2> Categories </h2>\n                        <Categories/>\n                    </div>\n                    <div className=\"top-tags-container\">\n                        <h2> Top Tags </h2>\n                        <TopTags/>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default App\n\n","import React, { ErrorInfo } from 'react'\n\ninterface IErrorBoundaryProps {}\ninterface IErrorBoundaryState { \n    hasError: boolean \n}\n\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n    constructor(props: IErrorBoundaryProps) {\n      super(props)\n      this.state = { hasError: false }\n    }\n  \n    static getDerivedStateFromError(error: Error) {\n      return { hasError: true }\n    }\n  \n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n      // Log the error to an error reporting service\n      console.log(error, errorInfo)\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // Fallback UI\n        return <h1>Something went wrong.</h1>\n      }\n  \n      return this.props.children\n    }\n  }\n\n  export default ErrorBoundary\n  ","import produce from 'immer'\n\nimport { IRootState, IAction } from \"../interfaces\"\nimport { ACTION_TYPES } from './actions'\n\nexport const TOGGLE = \"ui/toggle\"\n\nconst initialState: Partial<IRootState['blog']> = {\n  topTags: [],\n  categories: [],\n  blogs: [],\n  totalBlogs: 0,\n}\n\nconst reducer = (\n\tstate: Partial<IRootState['blog']> = initialState,\n\taction: IAction\n): Partial<IRootState['blog']> => produce(\n  state,\n  draftState => {\n    switch (action.type) {\n        case ACTION_TYPES.SAVE_CATEGORIES:\n            draftState.categories = action.payload.data\n            break\n        case ACTION_TYPES.SAVE_TOP_TAGS:\n            draftState.topTags = action.payload.data\n            break\n        case ACTION_TYPES.SAVE_BLOG_FEEDS:\n            draftState.blogs = action.payload.data\n            draftState.totalBlogs = action.payload.totalCount\n            break\n        }\n    }\n)\n\nexport default reducer\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport { history } from '../utils/router'\nimport blog from './reducers'\n\nconst reducers = { blog }\n\nconst routeMiddleware = routerMiddleware(history)\n\nlet middlewares = [routeMiddleware]\n\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose\n\nconst Store = createStore(combineReducers(reducers), composeEnhancers(applyMiddleware(...middlewares)))\n\nexport default Store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport ErrorBoundary from './components/common/ErrorBoundary'\nimport Store from './store'\n\nReactDOM.render(\n    <ErrorBoundary>\n        <Provider store={Store}>\n            <App />\n        </Provider>\n    </ErrorBoundary>, \n    document.getElementById('root')\n)\n"],"sourceRoot":""}